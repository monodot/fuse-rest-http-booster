---
kind: Template
apiVersion: v1
metadata:
  name: spring-boot-app-deploy
  annotations:
    openshift.io/display-name: Spring Boot Application Deployment Template
    description: A template to deploy a Spring Boot application
    iconClass: fa-cube
    tags: java,spring
labels:
  app: "${APPLICATION_NAME}"
  template: spring-boot-app-deploy
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      build: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  spec: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "${APPLICATION_NAME}"
  spec:
    replicas: 1
    selector:
      name: "${APPLICATION_NAME}"
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        timeoutSeconds: 3600
      type: Rolling
    template:
      metadata:
        creationTimestamp:
        labels:
          name: "${APPLICATION_NAME}"
      spec:
        containers:
        - env:
          - name: SPRING_APPLICATION_JSON
            value: '{"server":{"undertow":{"io-threads":1, "worker-threads":2 }}}'
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: "${APPLICATION_NAME}"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /health
              port: mgmt
            initialDelaySeconds: 180
            periodSeconds: 10
          name: "${APPLICATION_NAME}"
          ports:
          - containerPort: 8080
            name: web
            protocol: TCP
          - containerPort: 8081
            name: mgmt
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: mgmt
            initialDelaySeconds: 10
            periodSeconds: 10
          resources: {}
          terminationMessagePath: "/dev/termination-log"
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers: []
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: "${APPLICATION_NAME}"
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      name: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: "${APPLICATION_NAME}"
      weight: 100
    wildcardPolicy: None
parameters:
- name: APPLICATION_NAME
  displayName: Application Name
  description: The name assigned to all objects and the related imagestream.
  required: true
