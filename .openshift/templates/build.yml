---
kind: Template
apiVersion: v1
metadata:
  name: spring-boot-app-build
  annotations:
    openshift.io/display-name: Spring Boot Application Build
    description: S2I binary build config to create an image with the application baked in.
    iconClass: fa-cube
    tags: binary
labels:
  app: "${APPLICATION_NAME}"
  template: spring-boot-app-build
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      build: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  spec:
    nodeSelector:
    output:
      to:
        kind: ImageStreamTag
        name: "${APPLICATION_NAME}:${BUILD_TAG}"
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: ${IMAGE_STREAM_TAG_NAME}
          namespace: ${IMAGE_STREAM_NAMESPACE}
        type: Source
  status:
    lastVersion: 1
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      build: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  spec: {}
parameters:
- name: APPLICATION_NAME
  displayName: Application Name
  description: The name assigned to all objects and the resulting imagestream.
  required: true
  value: spring-boot-app
- name: BUILD_TAG
  displayName: Build Tag for Docker image
  description: The tag to apply to the container image once it is built.
  required: true
  value: latest
- name: IMAGE_STREAM_NAMESPACE
  displayName: Image Stream Namespace
  description: Namespace in which the ImageStreams for Red Hat Middleware images are
    installed. These ImageStreams are normally installed in the openshift namespace.
    You should only need to modify this if you've installed the ImageStreams in a
    different namespace/project.
  required: true
  value: openshift
- name: IMAGE_STREAM_TAG_NAME
  displayName: Image Stream Tag Name
  description: Image stream tag for the middleware base image to use to build the application
  required: true
  value: jboss-fuse70-java-openshift:1.0
